name: "Ruby on Rails CI"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      MINIMUM_COVERAGE: 75
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Make bin/bundle executable
        run: chmod +x bin/bundle
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true
      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3
      - name: Set up database schema
        run: bundle exec rails db:migrate
      - name: Run RSpec tests
        run: bundle exec rspec
      - name: Check Coverage
        run: |
          covered_percent=$(cat coverage/coverage.json | jq -r '.metrics.covered_percent');
          
          re='^[+-]?[0-9]+([.||,][0-9]+)?$';
          if ! [[ $covered_percent =~ $re ]]; then 
            echo "Couldn't get coverage from artifact.";
            exit 0 # Returning 0 doesn't invalidate this step.
          fi
          
          required_coverage=${{env.MINIMUM_COVERAGE}};
          
          if [ $covered_percent -le $required_coverage ]; then
            echo "Coverage ($covered_percent%) is below the required threshold of $required_coverage%.";
            exit 1 # Returning 1 will invalidate this step and the job will be marked as failed.
          else
            echo "Coverage ($covered_percent%) passed the required threshold of $required_coverage%."
          fi